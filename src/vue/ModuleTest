
@Override
public void start(Stage stage) {

		TableColumn<Module, String> nbSemaineCol = new TableColumn<Module, String>("nbSemaine");

		// ==== NbSemaine (TEXT FIELD) ===
		nbSemaineCol.setCellValueFactory(new PropertyValueFactory<>("nbSemaine"));

		nbSemaineCol.setCellFactory(TextFieldTableCell.<Module> forTableColumn());

		nbSemaineCol.setMinWidth(200);

		// On Cell edit commit (for nbSemaine column)
		nbSemaineCol.setOnEditCommit
		(
			(CellEditEvent<Module, String> event) -> 
			{
				TablePosition<Module, String> pos = event.getTablePosition();

				String newNbSemaine = event.getNewValue(); // on récupère le nouveau nbSemaine

				int row = pos.getRow();
				Module module = event.getTableView().getItems().get(row); // on récupère le module concerné

				module.setNbSemaine(newNbSemaine); // on met le nouveau nom au module concerné
			}
		);

	/*----------------------*/
	/* affectation au stage */
	/*----------------------*/

	/* Module */
	List<Module> ensModule = this.getModuleList( 1 ); // on récupère la List des Module du semestre
	ObservableList<Module> listModule;
	FXCollections.copy(ObservableList<Module> listModule, List<Module> ensModule); // met la List dans l'observableList
	tableModules.setItems(listModule);

	tableModules.getColumns().addAll(nbSemaineCol)
	/* autre */
	StackPane root = new StackPane();
	root.setPadding(new Insets(5));
	root.getChildren().add(tableModules);
	root.getChildren().add(tableTD);
	root.getChildren().add(tableTP);
	root.getChildren().add(tableCM);

	stage.setTitle("TableView (o7planning.org)");

	Scene scene = new Scene(root, 450, 300);
	stage.setScene(scene);
	stage.show();
}

private List<Module> getModuleList( int idSemestre) {
	List<Module> lst = new ArrayList<HeureCours>();

	//mettre tout les Module correspondant au semestre dans lst (je sais pas comment)

	return lst;
}

private ObservableList<HeureCours> getHeureCoursList( ArrayList<Module> lstModules, int idTypeCours) {
	List<HeureCours> lst = new ArrayList<HeureCours>();

	//mettre toutes les HeuresCours correspondant aux modules et au type cours dans lst (je sais pas comment)
	// attention de bien respecter l'ordre des heureCours, sinon on va avoir un décallage

	ObservableList<HeureCours> list = FXCollections.observableArrayList(lst);
	return list;
}